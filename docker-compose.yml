version: "3.7"

volumes:
  kong_data: {}

networks:
 kong-net:
  name: kong-net
  driver: bridge
  ipam:
    config:
      - subnet: 172.1.1.0/24

services:

  #######################################
  # Postgres: The database used by Kong
  #######################################
  kong-database:
    image: postgres:9.6
    container_name: kong-postgres
    restart: on-failure
    networks:
      - kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      # POSTGRES_PASSWORD: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  #######################################
  # Kong database migration
  #######################################
  kong-migration:
    # image: ${KONG_DOCKER_TAG:-kong:latest}
    image: kong:latest
    command: kong migrations bootstrap
    networks:
      - kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-database

  #######################################
  # Kong: The API Gateway
  #######################################
  kong:
    image: kong:latest
    container_name: kong
    restart: on-failure
    networks:
       kong-net:
        ipv4_address: 172.1.1.40
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      # KONG_PROXY_LISTEN: 0.0.0.0:8000
      # KONG_PROXY_LISTEN_SSL: 0.0.0.0:8443
      # KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
      
    depends_on:
      - kong-database
      - kong-migration
    healthcheck:
      test: ["CMD", "kong", "health"]
      interval: 10s
      timeout: 10s
      retries: 10
    ports:
      - "8000:8000"
      - "8001:8001"
      - "8443:8443"
      - "8444:8444"

  #######################################
  # Konga database prepare
  #######################################
  konga-prepare:
    image: pantsel/konga:latest
    command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5432/konga"
    networks:
      - kong-net
    restart: on-failure
    depends_on:
      - kong-database

  #######################################
  # Konga: Kong GUI
  #######################################
  konga:
    image: pantsel/konga:latest
    restart: always
    networks:
        - kong-net   
    environment:
      DB_ADAPTER: postgres
      DB_URI: postgresql://kong:kong@kong-database:5432/konga
      NODE_ENV: production
    depends_on:
      - kong-database
    ports:
      - "1337:1337"




#  Server 1: Alpha runs on port 4001
  alpha:
    build:
      context: ./alpha
      dockerfile: Dockerfile
    image: alpha
    container_name: alpha
    ports: 
      - "4001:4001"
    networks:
      kong-net:
        ipv4_address: 172.1.1.11
    volumes:
      - ./alpha:/app
      - /app/node_modules


#  Server 2: Beta runs on port 4001
  beta:
    build:
      context: ./beta
      dockerfile: Dockerfile
    image: beta
    container_name: beta
    ports: 
      - "4002:4002"
    networks:
      kong-net:
        ipv4_address: 172.1.1.12
    volumes:
      - ./beta:/app
      - /app/node_modules


  # Server 3: Gama runs on port 4000
  gama:
    build:
      context: ./gama
      dockerfile: Dockerfile
    image: gama
    container_name: gama
    ports: 
      - "4000:4000"
    networks:
      kong-net:
        ipv4_address: 172.1.1.13
    volumes:
      - ./gama:/app
      - /app/node_modules
      - ./gama/localhost-key.pem:/app/localhost-key.pem
      - ./gama/localhost.pem:/app/localhost.pem

#  Server 4: Omega runs on port 4001
  omega:
    build:
      context: ./omega
      dockerfile: Dockerfile
    image: omega
    container_name: omega
    ports: 
      - "4003:4003"
    networks:
      kong-net:
        ipv4_address: 172.1.1.14
    volumes:
      - ./omega:/app
      - /app/node_modules

# Zipkin
  zipkin:
    image: openzipkin/zipkin
    container_name: zipkin
    restart: unless-stopped
    environment:
      - STORAGE_TYPE=mem
    ports:
      - "9411:9411"
    networks:
      kong-net:
        ipv4_address: 172.1.1.20